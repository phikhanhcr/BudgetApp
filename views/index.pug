head
  meta(charset='UTF-8')
  link(href='https://fonts.googleapis.com/css?family=Open+Sans:100,300,400,600', rel='stylesheet', type='text/css')
  link(href='http://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css', rel='stylesheet', type='text/css')
  link(type='text/css', rel='stylesheet', href='style/style.css')
  script(src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js")
  link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css")
  title Budgety
.top
  .budget
    .profile
      .wrapper    
        img(src=User.avatar)
        p= User.user
      a(href="/login").btn.btn-secondary Log Out
    .budget__title
      | Available Budget in 
      span.budget__title--month= month
    .budget__value= totalBudget
    .budget__income.clearfix
      .budget__income--text Income
      .right
        .budget__income--value= `+ ${allAmountIncome}`
        .budget__income--percentage &nbsp;
    .budget__expenses.clearfix
      .budget__expenses--text Expenses
      .right.clearfix
        .budget__expenses--value= `- ${allAmountExpenses}`
        .budget__expenses--percentage= `${totalPer}%`
.bottom
  .add
    .add__container
      p.chooseMonth Choose Month 
      span.note *Note: You can edit detail when you are in current month 
      form.get-month(method="GET")
        select.select-month.form-group(name="selectMonth")
          each item in newArrMonth
            if checkMonthNow == item
              option(value=item checked)= item
            option(value=item)= item    
        button.add__btn
          i.ion-ios-checkmark-outline
      form(method="POST")(style={display : checkMonthNow})
        select.add__type(name="select")
          option(value='inc', selected) +
          option(value='exp') -
        input.add__description(type='text', placeholder='Add description', name="title" , required)
        input.add__value(type='number', placeholder='Value', name="amount" , required)
        button.add__btn
          i.ion-ios-checkmark-outline
  .container.clearfix
    .income
      h2.income__title Income
      each i in income
        .income__list
          .item.clearfix
            .item__description= i.name
            .right.clearfix
              .item__value= `+ ${i.amount}`
              .item__delete
                a(href=`/home/${i._id}/delete`).item__delete--btn
                  i.ion-ios-close-outline
    .expenses
      h2.expenses__title Expenses
      each j in expenses
        .expenses__list
          .item.clearfix
            .item__description= j.expenses.name
            .right.clearfix
              .item__value= `- ${j.expenses.amount}`
              .item__percentage= j.percentage + "%"
              .item__delete
                a(href=`/home/${j.expenses._id}/delete`).item__delete--btn
                  i.ion-ios-close-outline
  .container
    h3 Thống Kê theo từng tháng
    canvas#myChart(width='200', height='100')
    div
      p(style='display:none') Chart Income
        span#chartIncome= chartIncome
      p(style='display:none') Chart Expense
        span#chartExpense= chartExpense
      p InCome 
        span#income= allAmountIncome
      p Expense
        span#expense= allAmountExpenses
    
script.
  document.querySelector(".add__type").addEventListener('change', hi);
  function hi() {
  var fields = document.querySelectorAll(
  ".add__type" + ',' +
  ".add__description" + ',' +
  ".add__value");
  function nodeListForEach(list, cb) {
  for (var i = 0; i < list.length; i++) {
  cb(list[i]);
  }
  }
  nodeListForEach(fields, function (cur) {
  cur.classList.toggle('red-focus');
  });
  document.querySelector(".add__btn").classList.toggle('red');
  }
  var allAmountIncome = document.getElementById('income').innerHTML;
  var incomeReal = parseInt(allAmountIncome.slice(0 , allAmountIncome.length - 3).split(',').reduce((a , b) => {
    return a.concat(b)
  }))
  var allAmountExpenses = document.getElementById('expense').innerHTML;
   var expenseReal = parseInt(allAmountExpenses.slice(0 , allAmountExpenses.length - 3).split(',').reduce((a , b) => {
    return a.concat(b)
  }))
  var IncomeChart = document.getElementById('chartIncome').innerHTML.split(',').map(ele => parseInt(ele));
  console.log(IncomeChart)
  var ExpenseChart = document.getElementById('chartExpense').innerHTML.split(',').map(ele => parseInt(ele));
  var ctx = document.getElementById('myChart').getContext('2d');
  var myChart = new Chart(ctx, {
  type: 'line',
  data: {
  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
  datasets: [{
    label: 'Income',
    data: IncomeChart ,
    borderColor: [
    'rgb(54, 162, 235, 1)',
    'rgba(255, 99, 132, 1)'
    ],
    borderWidth: 1
  },{
    label : 'Expense',
    data: ExpenseChart,
    borderColor: [
    'rgba(232, 27, 27,1)'
    ],
    backgroundColor : 'rgba(218, 158, 158, 0.4)',
    borderWidth: 1
  }],
  options:{
    title:{
      display:true,
      text:"Manage Your Financial"
    }
  }
  }
  });
